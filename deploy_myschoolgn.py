#!/usr/bin/env python3
"""
Script de d√©ploiement automatis√© pour www.myschoolgn.space
√âcole Moderne - Syst√®me Multi-Tenant
"""

import os
import sys
import subprocess
import django
from pathlib import Path

def run_command(command, description):
    """Ex√©cute une commande et affiche le r√©sultat"""
    print(f"\nüîÑ {description}...")
    try:
        result = subprocess.run(command, shell=True, capture_output=True, text=True)
        if result.returncode == 0:
            print(f"‚úÖ {description} - Succ√®s")
            if result.stdout:
                print(result.stdout)
        else:
            print(f"‚ùå {description} - Erreur")
            print(result.stderr)
            return False
    except Exception as e:
        print(f"‚ùå Erreur lors de l'ex√©cution: {e}")
        return False
    return True

def main():
    print("üöÄ D√©ploiement √âcole Moderne sur www.myschoolgn.space")
    print("=" * 60)
    
    # V√©rifier que nous sommes dans le bon r√©pertoire
    if not os.path.exists('manage.py'):
        print("‚ùå Erreur: manage.py non trouv√©. Ex√©cutez ce script depuis le r√©pertoire du projet.")
        sys.exit(1)
    
    # 1. Cr√©er les r√©pertoires n√©cessaires
    print("\nüìÅ Cr√©ation des r√©pertoires...")
    os.makedirs('logs', exist_ok=True)
    os.makedirs('staticfiles', exist_ok=True)
    os.makedirs('media', exist_ok=True)
    print("‚úÖ R√©pertoires cr√©√©s")
    
    # 2. Appliquer les migrations
    if not run_command(
        'python manage.py migrate --settings=ecole_moderne.settings_production',
        'Application des migrations de base de donn√©es'
    ):
        print("‚ö†Ô∏è  Continuons malgr√© l'erreur de migration...")
    
    # 3. Collecter les fichiers statiques
    run_command(
        'python manage.py collectstatic --noinput --settings=ecole_moderne.settings_production',
        'Collection des fichiers statiques'
    )
    
    # 4. Cr√©er un superutilisateur si n√©cessaire
    print("\nüë§ V√©rification du superutilisateur...")
    try:
        os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'ecole_moderne.settings_production')
        django.setup()
        from django.contrib.auth.models import User
        
        if not User.objects.filter(is_superuser=True).exists():
            print("Aucun superutilisateur trouv√©. Cr√©ation automatique...")
            User.objects.create_superuser(
                username='admin',
                email='admin@myschoolgn.space',
                password='admin123'
            )
            print("‚úÖ Superutilisateur cr√©√©: admin/admin123")
        else:
            print("‚úÖ Superutilisateur existant trouv√©")
    except Exception as e:
        print(f"‚ö†Ô∏è  Erreur lors de la cr√©ation du superutilisateur: {e}")
    
    # 5. Initialiser les donn√©es de base
    print("\nüè´ Initialisation des donn√©es de base...")
    try:
        from ecole_moderne.management.commands.init_multi_tenant import Command as InitCommand
        init_cmd = InitCommand()
        init_cmd.handle()
        print("‚úÖ Donn√©es de base initialis√©es")
    except Exception as e:
        print(f"‚ö†Ô∏è  Erreur lors de l'initialisation: {e}")
    
    # 6. V√©rifier la configuration
    print("\nüîç V√©rification de la configuration...")
    run_command(
        'python manage.py check --settings=ecole_moderne.settings_production',
        'V√©rification de la configuration Django'
    )
    
    print("\n" + "=" * 60)
    print("üéâ D√©ploiement termin√©!")
    print("\nüìã Informations importantes:")
    print("‚Ä¢ URL: https://www.myschoolgn.space")
    print("‚Ä¢ Admin: https://www.myschoolgn.space/admin/")
    print("‚Ä¢ Inscription √©coles: https://www.myschoolgn.space/ecole/inscription-complete/")
    print("‚Ä¢ Superutilisateur: admin / admin123")
    print("\n‚ö†Ô∏è  N'oubliez pas de:")
    print("1. Configurer les variables d'environnement dans .bashrc")
    print("2. Activer le certificat HTTPS")
    print("3. Recharger l'application web")
    print("4. Changer le mot de passe admin par d√©faut")

if __name__ == '__main__':
    main()
