# Generated by Django 5.2.5 on 2025-09-09 05:55

import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('eleves', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Enseignant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100, verbose_name='Nom')),
                ('prenoms', models.CharField(max_length=150, verbose_name='Prénoms')),
                ('telephone', models.CharField(blank=True, max_length=20, verbose_name='Téléphone')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='Email')),
                ('adresse', models.TextField(blank=True, verbose_name='Adresse')),
                ('type_enseignant', models.CharField(choices=[('GARDERIE', 'Garderie'), ('MATERNELLE', 'Maternelle'), ('PRIMAIRE', 'Primaire'), ('SECONDAIRE', 'Secondaire (taux horaire)'), ('ADMINISTRATEUR', 'Administrateur')], max_length=20, verbose_name="Type d'enseignant")),
                ('statut', models.CharField(choices=[('ACTIF', 'Actif'), ('CONGE', 'En congé'), ('SUSPENDU', 'Suspendu'), ('DEMISSIONNAIRE', 'Démissionnaire')], default='ACTIF', max_length=20, verbose_name='Statut')),
                ('taux_horaire', models.DecimalField(blank=True, decimal_places=2, help_text='Pour les enseignants du secondaire uniquement', max_digits=10, null=True, verbose_name='Taux horaire (GNF)')),
                ('salaire_fixe', models.DecimalField(blank=True, decimal_places=2, help_text='Pour garderie, maternelle, primaire et administrateurs', max_digits=12, null=True, verbose_name='Salaire fixe (GNF)')),
                ('heures_mensuelles', models.DecimalField(blank=True, decimal_places=2, help_text="Nombre d'heures de travail prévues par mois (pour calcul précis du salaire)", max_digits=6, null=True, verbose_name='Heures mensuelles')),
                ('date_embauche', models.DateField(verbose_name="Date d'embauche")),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_modification', models.DateTimeField(auto_now=True)),
                ('cree_par', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='enseignants_crees', to=settings.AUTH_USER_MODEL)),
                ('ecole', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='eleves.ecole', verbose_name='École')),
            ],
            options={
                'verbose_name': 'Enseignant',
                'verbose_name_plural': 'Enseignants',
                'ordering': ['nom', 'prenoms'],
            },
        ),
        migrations.CreateModel(
            name='AffectationClasse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('heures_par_semaine', models.DecimalField(blank=True, decimal_places=2, help_text="Nombre d'heures d'enseignement par semaine dans cette classe", max_digits=5, null=True, verbose_name='Heures par semaine')),
                ('matiere', models.CharField(blank=True, help_text='Matière enseignée dans cette classe', max_length=100, verbose_name='Matière')),
                ('date_debut', models.DateField(verbose_name='Date de début')),
                ('date_fin', models.DateField(blank=True, null=True, verbose_name='Date de fin')),
                ('actif', models.BooleanField(default=True, verbose_name='Actif')),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_modification', models.DateTimeField(auto_now=True)),
                ('classe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='eleves.classe', verbose_name='Classe')),
                ('enseignant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='affectations', to='salaires.enseignant', verbose_name='Enseignant')),
            ],
            options={
                'verbose_name': 'Affectation de classe',
                'verbose_name_plural': 'Affectations de classes',
                'ordering': ['-date_debut'],
                'unique_together': {('enseignant', 'classe', 'date_debut')},
            },
        ),
        migrations.CreateModel(
            name='PeriodeSalaire',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mois', models.IntegerField(choices=[(1, '01'), (2, '02'), (3, '03'), (4, '04'), (5, '05'), (6, '06'), (7, '07'), (8, '08'), (9, '09'), (10, '10'), (11, '11'), (12, '12')], verbose_name='Mois')),
                ('annee', models.IntegerField(verbose_name='Année')),
                ('nombre_semaines', models.DecimalField(decimal_places=2, default=Decimal('4.33'), help_text='Nombre moyen de semaines dans le mois (défaut: 4.33)', max_digits=4, verbose_name='Nombre de semaines')),
                ('cloturee', models.BooleanField(default=False, help_text='Une fois clôturée, la période ne peut plus être modifiée', verbose_name='Clôturée')),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_cloture', models.DateTimeField(blank=True, null=True)),
                ('cloturee_par', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='periodes_salaire_cloturees', to=settings.AUTH_USER_MODEL)),
                ('cree_par', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='periodes_salaire_creees', to=settings.AUTH_USER_MODEL)),
                ('ecole', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='eleves.ecole', verbose_name='École')),
            ],
            options={
                'verbose_name': 'Période de salaire',
                'verbose_name_plural': 'Périodes de salaire',
                'ordering': ['-annee', '-mois'],
                'unique_together': {('mois', 'annee', 'ecole')},
            },
        ),
        migrations.CreateModel(
            name='EtatSalaire',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_heures', models.DecimalField(blank=True, decimal_places=2, help_text='Total des heures enseignées dans le mois', max_digits=8, null=True, verbose_name='Total heures')),
                ('salaire_base', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Salaire de base')),
                ('primes', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=10, verbose_name='Primes')),
                ('deductions', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=10, verbose_name='Déductions')),
                ('salaire_net', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Salaire net')),
                ('valide', models.BooleanField(default=False, help_text='État de salaire validé et prêt pour paiement', verbose_name='Validé')),
                ('paye', models.BooleanField(default=False, verbose_name='Payé')),
                ('date_calcul', models.DateTimeField(auto_now_add=True)),
                ('date_validation', models.DateTimeField(blank=True, null=True)),
                ('date_paiement', models.DateTimeField(blank=True, null=True)),
                ('observations', models.TextField(blank=True, verbose_name='Observations')),
                ('calcule_par', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='etats_salaire_calcules', to=settings.AUTH_USER_MODEL)),
                ('enseignant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='etats_salaire', to='salaires.enseignant', verbose_name='Enseignant')),
                ('valide_par', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='etats_salaire_valides', to=settings.AUTH_USER_MODEL)),
                ('periode', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='etats_salaire', to='salaires.periodesalaire', verbose_name='Période')),
            ],
            options={
                'verbose_name': 'État de salaire',
                'verbose_name_plural': 'États de salaire',
                'ordering': ['-periode__annee', '-periode__mois', 'enseignant__nom'],
                'unique_together': {('enseignant', 'periode')},
            },
        ),
        migrations.CreateModel(
            name='DetailHeuresClasse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('heures_prevues', models.DecimalField(decimal_places=2, help_text="Heures prévues selon l'affectation", max_digits=6, verbose_name='Heures prévues')),
                ('heures_realisees', models.DecimalField(decimal_places=2, help_text='Heures effectivement enseignées', max_digits=6, verbose_name='Heures réalisées')),
                ('taux_horaire_applique', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Taux horaire appliqué')),
                ('montant', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Montant')),
                ('affectation_classe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='salaires.affectationclasse', verbose_name='Affectation classe')),
                ('etat_salaire', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='details_heures', to='salaires.etatsalaire', verbose_name='État de salaire')),
            ],
            options={
                'verbose_name': 'Détail heures par classe',
                'verbose_name_plural': 'Détails heures par classe',
                'unique_together': {('etat_salaire', 'affectation_classe')},
            },
        ),
    ]
